// Code generated by protoc-gen-go. DO NOT EDIT.
// source: getAgeById.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SIdReq struct {
	SId                  int64    `protobuf:"varint,1,opt,name=sId,proto3" json:"sId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SIdReq) Reset()         { *m = SIdReq{} }
func (m *SIdReq) String() string { return proto.CompactTextString(m) }
func (*SIdReq) ProtoMessage()    {}
func (*SIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_95c18bc0696b1abb, []int{0}
}

func (m *SIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SIdReq.Unmarshal(m, b)
}
func (m *SIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SIdReq.Marshal(b, m, deterministic)
}
func (m *SIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SIdReq.Merge(m, src)
}
func (m *SIdReq) XXX_Size() int {
	return xxx_messageInfo_SIdReq.Size(m)
}
func (m *SIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_SIdReq proto.InternalMessageInfo

func (m *SIdReq) GetSId() int64 {
	if m != nil {
		return m.SId
	}
	return 0
}

type AgeRes struct {
	SAge                 int64    `protobuf:"varint,1,opt,name=sAge,proto3" json:"sAge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgeRes) Reset()         { *m = AgeRes{} }
func (m *AgeRes) String() string { return proto.CompactTextString(m) }
func (*AgeRes) ProtoMessage()    {}
func (*AgeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_95c18bc0696b1abb, []int{1}
}

func (m *AgeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgeRes.Unmarshal(m, b)
}
func (m *AgeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgeRes.Marshal(b, m, deterministic)
}
func (m *AgeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgeRes.Merge(m, src)
}
func (m *AgeRes) XXX_Size() int {
	return xxx_messageInfo_AgeRes.Size(m)
}
func (m *AgeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AgeRes.DiscardUnknown(m)
}

var xxx_messageInfo_AgeRes proto.InternalMessageInfo

func (m *AgeRes) GetSAge() int64 {
	if m != nil {
		return m.SAge
	}
	return 0
}

func init() {
	proto.RegisterType((*SIdReq)(nil), "server.sIdReq")
	proto.RegisterType((*AgeRes)(nil), "server.ageRes")
}

func init() {
	proto.RegisterFile("getAgeById.proto", fileDescriptor_95c18bc0696b1abb)
}

var fileDescriptor_95c18bc0696b1abb = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x4f, 0x2d, 0x71,
	0x4c, 0x4f, 0x75, 0xaa, 0xf4, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x4e,
	0x2d, 0x2a, 0x4b, 0x2d, 0x52, 0x92, 0xe2, 0x62, 0x2b, 0xf6, 0x4c, 0x09, 0x4a, 0x2d, 0x14, 0x12,
	0xe0, 0x62, 0x2e, 0xf6, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x02, 0x31, 0x95, 0x64,
	0xb8, 0xd8, 0x12, 0xd3, 0x53, 0x83, 0x52, 0x8b, 0x85, 0x84, 0xb8, 0x58, 0x8a, 0x1d, 0xd3, 0x53,
	0xa1, 0x92, 0x60, 0xb6, 0x91, 0x05, 0x17, 0xd4, 0x0c, 0x21, 0x3d, 0x2e, 0x2e, 0x77, 0xb8, 0xf9,
	0x42, 0x7c, 0x7a, 0x10, 0x61, 0x3d, 0x88, 0xb9, 0x52, 0x70, 0x3e, 0xc4, 0x2c, 0x25, 0x86, 0x24,
	0x36, 0xb0, 0x13, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x8e, 0x40, 0x8d, 0x96, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServerClient is the client API for Server service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerClient interface {
	GetAgeById(ctx context.Context, in *SIdReq, opts ...grpc.CallOption) (*AgeRes, error)
}

type serverClient struct {
	cc grpc.ClientConnInterface
}

func NewServerClient(cc grpc.ClientConnInterface) ServerClient {
	return &serverClient{cc}
}

func (c *serverClient) GetAgeById(ctx context.Context, in *SIdReq, opts ...grpc.CallOption) (*AgeRes, error) {
	out := new(AgeRes)
	err := c.cc.Invoke(ctx, "/server.server/GetAgeById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServer is the server API for Server service.
type ServerServer interface {
	GetAgeById(context.Context, *SIdReq) (*AgeRes, error)
}

// UnimplementedServerServer can be embedded to have forward compatible implementations.
type UnimplementedServerServer struct {
}

func (*UnimplementedServerServer) GetAgeById(ctx context.Context, req *SIdReq) (*AgeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgeById not implemented")
}

func RegisterServerServer(s *grpc.Server, srv ServerServer) {
	s.RegisterService(&_Server_serviceDesc, srv)
}

func _Server_GetAgeById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).GetAgeById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.server/GetAgeById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).GetAgeById(ctx, req.(*SIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.server",
	HandlerType: (*ServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAgeById",
			Handler:    _Server_GetAgeById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "getAgeById.proto",
}
